<?php

namespace App\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\Routing\Annotation\Route;
use App\Entity\Produit;
use App\Entity\Pharmacies;
use App\Form\AjouterProduitType;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Doctrine\Common\Persistence\ObjectManager;


class GestionController extends AbstractController
{
    /**
     * @Route("/ajouterProduit", name="gestion_ajouter")
     */
    public function ajouter(Request $request, ObjectManager $manager) //to add product into user Stock
    {
      //get the current user
      $phar = $this->getUser();

    	$prod = new Produit();
    	$form = $this->createForm(AjouterProduitType::class, $prod);

    	$form->handleRequest($request);

		if($form->isSubmitted() && $form->isValid()){

			
      //to upload files
			$file = $form->get('image')->getData();
            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            // moves the file to the directory where brochures are stored
            $file->move(
                $this->getParameter('brochures_directory'),
                $fileName
            );

            $prod->setImage($fileName);
            $prod->setNomPharmacie($phar->getNom());
    		
    		$manager->persist($prod);
    		$manager->flush(); 
    	}


        return $this->render('gestion/produit.html.twig', [
            'formProd' => $form->createView()
        ]);
    }

     /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

     /**
     * @Route("/listeProduit", name="gestion_recuperer")
     */

    public function recuperer(){ //to list user products

      $phar = $this->getUser();

    	$repo = $this->getDoctrine()->getRepository(Produit::class);

		$produits = $repo->findByNomPharmacie($phar->getNom());
    	//$phar = $this->getUser();

    	//$resultat = $produits->findOneByNomPharmacie($phar->getNom());
    	
    	

    	 return $this->render('gestion/listeProd.html.twig', [
            'produits' => $produits
            
        ]);

     }

 	/**
     
     * @Route("/modification{id}", name="gestion_modifier")
     */

 	 public function modifier(Request $request, Produit $prod){//to update user product
      //Récupération du formulaire
        $form = $this->createForm(AjouterProduitType::class, $prod);//Lien Objet géré par le formulaire -> Requête soumission du formulaire

        $form-> handleRequest($request);

        //si le formulaire à été soumis et est valide
        if($form->isSubmitted() && $form->isValid()){
            //enregistrement du produit dans la bdd
            $em = $this->getDoctrine()->getManager();
            //inutile, l'objet provient de la BDD
            //$em->persist($produit);
            $file = $form->get('image')->getData();
            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            // moves the file to the directory where brochures are stored
            $file->move(
                $this->getParameter('brochures_directory'),
                $fileName
            );

            $prod->setImage($fileName);
            $em->flush();

             $this->get('session')->getFlashBag()->add(
		        'notice',
		        'Le produit à bien été modifié dans la base de donnée !'
         
		    );
        }
        //Génération du code HTML pour le formulaire créé
        $formView = $form->createView();
        //Affichage de la vue
        return $this->render('gestion/produit.html.twig', array('formProd'=>$formView));


    }

      /**
     * @Route("/supprimer/{id}", name="gestion_delete")
     */
    public function delete(Produit $produit){//to remove user product
        // recuperation de l'entity manager
        $em = $this->getDoctrine()->getManager();
        $em->remove($produit);
        $em->flush();
        //return new Response ('Produit supprimé depuis votre base de données ! ');
         $this->get('session')->getFlashBag()->add(
		        'remarque',
		        'Produit supprimé depuis votre base de données !'
		    );
         return $this->redirectToRoute('gestion_recuperer');
    }



}